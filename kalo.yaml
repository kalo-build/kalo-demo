# Kalo YAML Configuration

stores:
  morpheRegistry:
    type: "localFileSystem"
    path: "$MORPHE_REGISTRY_PATH"
  sqlOutput:
    type: "localFileSystem"
    path: "$SQL_OUTPUT_PATH"
  tsOutput:
    type: "localFileSystem"
    path: "$TS_OUTPUT_PATH"
  goOutput:
    type: "localFileSystem"
    path: "$GO_OUTPUT_PATH"

pipelines:
  compile:
    - stage: "data-types"
      steps:
        - "plugin: @kalo-build/plugin-morphe-psql-types"
        - "plugin: @kalo-build/plugin-morphe-go-struct"
        - "plugin: @kalo-build/plugin-morphe-ts-types"

plugins:
  "@kalo-build/plugin-morphe-psql-types":
    version: "v1.0.0"
    input:
      spec: "KA:MO1:YAML1"
      store: "morpheRegistry"
    output:
      spec: "KA:MO1:PSQL1"
      store: "sqlOutput"
    config:
      models:
        "Schema": "public"
        "UseBigSerial": false
      enums:
        "Schema": "public"
        "UseBigSerial": false
      entities:
        "Schema": "public"
        "UseBigSerial": false
      structures:
        "Schema": "public"
        "UseBigSerial": false
        "EnablePersistence": true
  
  "@kalo-build/plugin-morphe-ts-types":
    version: "v1.0.0"
    input:
      spec: "KA:MO1:YAML1"
      store: "morpheRegistry"
    output:
      spec: "KA:MO1:TS1"
      store: "tsOutput"
  
  "@kalo-build/plugin-morphe-go-struct":
    version: "v1.0.0"
    input:
      spec: "KA:MO1:YAML1"
      store: "morpheRegistry"
    output:
      spec: "KA:MO1:GO1"
      store: "goOutput"
    config:
      models:
        "Package": "models"
        "ReceiverName": "m"
      enums:
        "Package": "enums"
        "ReceiverName": "e"
      entities:
        "Package": "entities"
        "ReceiverName": "e"
      structures:
        "Package": "structures"
        "ReceiverName": "s"